"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 4.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
# 在文件顶部添加
from dotenv import load_dotenv
import os

from pathlib import Path

# 加载 .env 文件
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-3^d6z_%(vlb)v!_$q&dmq7#16brm3m69&)5h&%6t7^t4_jmxs@"

# SECURITY WARNING: don't run with debug turned on in production!
# 从环境变量中获取配置信息
DEBUG = os.getenv('DEBUG', 'False').lower() == 'true'
ALLOWED_HOSTS = os.getenv('ALLOWED_HOSTS', '').split(',')

# Application definition
INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # zys add
    'apps.portal.apps.PortalConfig',  # 添加这行
    'corsheaders',

]

CORS_ALLOW_ALL_ORIGINS = False
CORS_ALLOWED_ORIGINS = [
    "https://myseek.fun",
    "https://www.myseek.fun",
    "http://localhost:8080",
]


CORS_ALLOW_METHODS = [
    #"DELETE",
    "GET",
    "OPTIONS",
    #"PATCH",
    "POST",
    #"PUT",
]

CORS_ALLOW_HEADERS = [
    "accept",
    "accept-encoding",
    "authorization",
    "content-type",
    #"dnt",
    #"origin",
    #"user-agent",
    #"x-csrftoken",
    #"x-requested-with",
    # 若有自定义请求头，添加在这里

]
CORS_PREFLIGHT_MAX_AGE = 86400

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],  # 确保这行存在
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = "config.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# 修改数据库配置
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.getenv('DB_NAME'),         # 从 .env 读取
        'USER': os.getenv('DB_USER'),         # 从 .env 读取
        'PASSWORD': os.getenv('DB_PASSWORD'), # 从 .env 读取
        'HOST': os.getenv('DB_HOST'),         # 从 .env 读取
        'PORT': os.getenv('DB_PORT'),         # 从 .env 读取
        'OPTIONS': {
            'charset': 'utf8mb4',
        }
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"

# 静态文件目录
STATICFILES_DIRS = [BASE_DIR / 'static']

STATIC_ROOT = BASE_DIR / 'staticfiles'
# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/3",  # 默认端口6379,业务数据缓存
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}


# settings.py
CELERY_BROKER_URL = 'redis://localhost:6379/1'  # 使用编号为 0 的数据库作为消息队列
CELERY_RESULT_BACKEND = 'redis://localhost:6379/2'  # 使用编号为 1 的数据库存储任务结果
# 序列化配置
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_ACCEPT_CONTENT = ['json']

# 进程池
CELERY_WORKER_POOL = 'solo' #prework也可以

CELERY_TIMEZONE = 'Asia/Shanghai'

CELERY_BEAT_SCHEDULE = {
    'sync-visits-every-hour': {
        'task': 'apps.portal.tasks.sync_visits_to_db',  # 确保路径正确
        'schedule': 3600,  # 每 3600 秒（1 小时）执行一次
    },
}


